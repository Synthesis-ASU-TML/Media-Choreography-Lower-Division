<jittershader name="default">
	<description> Default Slab </description>
	<param name="scale" type="float" default="0.001" />
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
	<language name="glsl" version="1.0">
		<bind param="scale" program="fp" />
		<bind param="tex0" program="fp" />		
		<bind param="tex1" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[

#version 140
varying vec2 texcoord0;
varying vec2 texdim1;
void main (void)
{
    gl_Position = ftransform();
    texcoord0    = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	texdim1 = vec2(abs(gl_TextureMatrix[1][0][0]), abs(gl_TextureMatrix[1][1][1]));
}
]]>		
		</program>
		<program name="fp" type="fragment">
<![CDATA[

#version 140
varying vec2 texcoord0;
varying vec2 texdim1;
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform float scale;

void main(void) 
{
	vec2 velSample = texture2DRect(tex0,texcoord0).xy * texdim1; //find the velocity field position
	float off_flag = mod(texcoord0.x, 2.0); //flag if this is the offset vertex
	vec2 velocity = texture2DRect(tex1, velSample).xy;
	velocity = velocity * vec2(scale);// * vec2(-1.0);
	vec2 offset = velocity * vec2(off_flag);
	vec2 outputPos = texture2DRect(tex0, texcoord0).xy + offset;
	vec2 verpos = texture2DRect(tex0, texcoord0).xy;
	//gl_FragColor = vec4(verpos.x, verpos.y, 0.0, 0.0);
	gl_FragColor = vec4(outputPos.x, outputPos.y, 0.0, 0.0);
}
]]>
		</program>
	</language>
</jittershader>
